var searchIndex = {};
searchIndex['alsa'] = {"items":[[0,"","alsa","This ALSA API wrapper/binding is WIP - the ALSA API is huge, and new\nfunctions and structs might be added as requested. Enjoy!",null,null],[3,"Error","","Most ALSA functions can return a negative error code.\nIf so, then that error code is wrapped into this `Error` struct.\nAn Error is also returned in case ALSA returns a string that\ncannot be translated into Rust's UTF-8 strings.",null,null],[4,"Direction","","Replaces constants ending with PLAYBACK/CAPTURE as well as\nINPUT/OUTPUT ",null,null],[13,"Playback","","",0,null],[13,"Capture","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",1,{"inputs":[{"name":"error"},{"name":"option"},{"name":"c_int"}],"output":{"name":"error"}}],[11,"code","","",1,{"inputs":[{"name":"error"}],"output":{"name":"c_int"}}],[11,"description","","",1,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"card","","Sound card enumeration",null,null],[3,"Card","alsa::card","An ALSA sound card, uniquely identified by its index.",null,null],[3,"Iter","","Iterate over existing sound cards.",null,null],[11,"new","","",2,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","","",null,null],[11,"next","","",2,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"new","","",3,{"inputs":[{"name":"card"},{"name":"c_int"}],"output":{"name":"card"}}],[11,"from_str","","",3,{"inputs":[{"name":"card"},{"name":"cstr"}],"output":{"name":"result"}}],[11,"get_name","","",3,{"inputs":[{"name":"card"}],"output":{"name":"result"}}],[11,"get_longname","","",3,{"inputs":[{"name":"card"}],"output":{"name":"result"}}],[11,"get_index","","",3,{"inputs":[{"name":"card"}],"output":{"name":"c_int"}}],[0,"ctl","alsa","Control device API",null,null],[3,"Ctl","alsa::ctl","[snd_ctl_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___control.html) wrapper",null,null],[3,"CardInfo","","[snd_ctl_card_info_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___control.html) wrapper",null,null],[4,"ElemIface","","[SND_CTL_ELEM_IFACE_xxx](http://www.alsa-project.org/alsa-doc/alsa-lib/group___control.html) constants",null,null],[13,"Card","","",4,null],[13,"Hwdep","","",4,null],[13,"Mixer","","",4,null],[13,"PCM","","",4,null],[13,"Rawmidi","","",4,null],[13,"Timer","","",4,null],[13,"Sequencer","","",4,null],[11,"open","","Open does not support async mode (it's not very Rustic anyway)",5,{"inputs":[{"name":"ctl"},{"name":"cstr"},{"name":"bool"}],"output":{"name":"result"}}],[11,"from_card","","",5,{"inputs":[{"name":"ctl"},{"name":"card"},{"name":"bool"}],"output":{"name":"result"}}],[11,"handle","","",5,null],[11,"card_info","","",5,{"inputs":[{"name":"ctl"}],"output":{"name":"result"}}],[11,"drop","","",5,{"inputs":[{"name":"ctl"}],"output":null}],[11,"drop","","",6,{"inputs":[{"name":"cardinfo"}],"output":null}],[11,"get_id","","",6,{"inputs":[{"name":"cardinfo"}],"output":{"name":"result"}}],[11,"get_driver","","",6,{"inputs":[{"name":"cardinfo"}],"output":{"name":"result"}}],[11,"get_components","","",6,{"inputs":[{"name":"cardinfo"}],"output":{"name":"result"}}],[11,"get_longname","","",6,{"inputs":[{"name":"cardinfo"}],"output":{"name":"result"}}],[11,"get_name","","",6,{"inputs":[{"name":"cardinfo"}],"output":{"name":"result"}}],[11,"get_mixername","","",6,{"inputs":[{"name":"cardinfo"}],"output":{"name":"result"}}],[11,"get_card","","",6,{"inputs":[{"name":"cardinfo"}],"output":{"name":"card"}}],[11,"cmp","","",4,{"inputs":[{"name":"elemiface"},{"name":"elemiface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"elemiface"},{"name":"elemiface"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"elemiface"},{"name":"elemiface"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"elemiface"},{"name":"elemiface"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"elemiface"},{"name":"elemiface"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"elemiface"},{"name":"elemiface"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"elemiface"},{"name":"elemiface"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"elemiface"},{"name":"elemiface"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"elemiface"}],"output":{"name":"elemiface"}}],[11,"fmt","","",4,{"inputs":[{"name":"elemiface"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hctl","alsa","HCtl API - for mixer control and jack detection",null,null],[3,"HCtl","alsa::hctl","[snd_hctl_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___h_control.html) wrapper",null,null],[3,"ElemIter","","Iterates over elements for a `HCtl`",null,null],[3,"Elem","","[snd_hctl_elem_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___h_control.html) wrapper",null,null],[11,"drop","","",7,{"inputs":[{"name":"hctl"}],"output":null}],[11,"open","","Open does not support async mode (it's not very Rustic anyway)\nNote: You probably want to call `load` afterwards.",7,{"inputs":[{"name":"hctl"},{"name":"cstr"},{"name":"bool"}],"output":{"name":"result"}}],[11,"load","","",7,{"inputs":[{"name":"hctl"}],"output":{"name":"result"}}],[11,"elem_iter","","",7,{"inputs":[{"name":"hctl"}],"output":{"name":"elemiter"}}],[6,"Item","","",null,null],[11,"next","","",8,{"inputs":[{"name":"elemiter"}],"output":{"name":"option"}}],[11,"get_name","","",9,{"inputs":[{"name":"elem"}],"output":{"name":"result"}}],[11,"get_device","","",9,{"inputs":[{"name":"elem"}],"output":{"name":"u32"}}],[11,"get_subdevice","","",9,{"inputs":[{"name":"elem"}],"output":{"name":"u32"}}],[11,"get_numid","","",9,{"inputs":[{"name":"elem"}],"output":{"name":"u32"}}],[11,"get_index","","",9,{"inputs":[{"name":"elem"}],"output":{"name":"u32"}}],[11,"get_interface","","",9,{"inputs":[{"name":"elem"}],"output":{"name":"elemiface"}}],[0,"pcm","alsa","Audio playback and capture",null,null],[3,"PCM","alsa::pcm","[snd_pcm_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m.html) wrapper - start here for audio playback and recording",null,null],[3,"IO","","Implements `std::io::Read` and `std::io::Write` for `PCM`",null,null],[3,"HwParams","","[snd_pcm_hw_params_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m___h_w___params.html) wrapper",null,null],[3,"SwParams","","[snd_pcm_sw_params_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m___s_w___params.html) wrapper",null,null],[4,"State","","[SND_PCM_STATE_xxx](http://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m.html) constants",null,null],[13,"Open","","",10,null],[13,"Setup","","",10,null],[13,"Prepared","","",10,null],[13,"Running","","",10,null],[13,"XRun","","",10,null],[13,"Draining","","",10,null],[13,"Paused","","",10,null],[13,"Suspended","","",10,null],[13,"Disconnected","","",10,null],[4,"Format","","[SND_PCM_FORMAT_xxx](http://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m.html) constants",null,null],[13,"Unknown","","",11,null],[13,"S16LE","","",11,null],[13,"FloatLE","","",11,null],[4,"Access","","[SND_PCM_ACCESS_xxx](http://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m.html) constants",null,null],[13,"MMapInterleaved","","",12,null],[13,"MMapNonInterleaved","","",12,null],[13,"MMapComplex","","",12,null],[13,"RWInterleaved","","",12,null],[13,"RWNonInterleaved","","",12,null],[6,"Frames","","[snd_pcm_sframes_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___p_c_m.html)",null,null],[11,"open","","",13,{"inputs":[{"name":"pcm"},{"name":"cstr"},{"name":"direction"},{"name":"bool"}],"output":{"name":"result"}}],[11,"start","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"drop","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"pause","","",13,{"inputs":[{"name":"pcm"},{"name":"bool"}],"output":{"name":"result"}}],[11,"resume","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"drain","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"prepare","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"reset","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"wait","","",13,{"inputs":[{"name":"pcm"},{"name":"option"}],"output":{"name":"result"}}],[11,"state","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"state"}}],[11,"bytes_to_frames","","",13,{"inputs":[{"name":"pcm"},{"name":"isize"}],"output":{"name":"frames"}}],[11,"frames_to_bytes","","",13,{"inputs":[{"name":"pcm"},{"name":"frames"}],"output":{"name":"isize"}}],[11,"avail_update","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"avail","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"avail_delay","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"io","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"io"}}],[11,"hw_params","","",13,{"inputs":[{"name":"pcm"},{"name":"hwparams"}],"output":{"name":"result"}}],[11,"hw_params_current","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"sw_params","","",13,{"inputs":[{"name":"pcm"},{"name":"swparams"}],"output":{"name":"result"}}],[11,"sw_params_current","","",13,{"inputs":[{"name":"pcm"}],"output":{"name":"result"}}],[11,"drop","","",13,{"inputs":[{"name":"pcm"}],"output":null}],[11,"read","","",14,null],[11,"write","","",14,null],[11,"flush","","",14,{"inputs":[{"name":"io"}],"output":{"name":"result"}}],[11,"cmp","","",10,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",10,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",11,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"fmt","","",11,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",12,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"access"}],"output":{"name":"access"}}],[11,"fmt","","",12,{"inputs":[{"name":"access"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",15,{"inputs":[{"name":"hwparams"}],"output":null}],[11,"any","","",15,{"inputs":[{"name":"hwparams"},{"name":"pcm"}],"output":{"name":"result"}}],[11,"set_channels","","",15,{"inputs":[{"name":"hwparams"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get_channels","","",15,{"inputs":[{"name":"hwparams"}],"output":{"name":"result"}}],[11,"set_rate","","",15,{"inputs":[{"name":"hwparams"},{"name":"u32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"get_rate","","",15,{"inputs":[{"name":"hwparams"}],"output":{"name":"result"}}],[11,"set_format","","",15,{"inputs":[{"name":"hwparams"},{"name":"format"}],"output":{"name":"result"}}],[11,"get_format","","",15,{"inputs":[{"name":"hwparams"}],"output":{"name":"result"}}],[11,"set_access","","",15,{"inputs":[{"name":"hwparams"},{"name":"access"}],"output":{"name":"result"}}],[11,"get_access","","",15,{"inputs":[{"name":"hwparams"}],"output":{"name":"result"}}],[11,"set_period_size","","",15,{"inputs":[{"name":"hwparams"},{"name":"frames"},{"name":"i32"}],"output":{"name":"result"}}],[11,"get_period_size","","",15,{"inputs":[{"name":"hwparams"}],"output":{"name":"result"}}],[11,"set_periods","","",15,{"inputs":[{"name":"hwparams"},{"name":"u32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"get_periods","","",15,{"inputs":[{"name":"hwparams"}],"output":{"name":"result"}}],[11,"set_buffer_size","","",15,{"inputs":[{"name":"hwparams"},{"name":"frames"}],"output":{"name":"result"}}],[11,"get_buffer_size","","",15,{"inputs":[{"name":"hwparams"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"hwparams"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",16,{"inputs":[{"name":"swparams"}],"output":null}],[11,"set_avail_min","","",16,{"inputs":[{"name":"swparams"},{"name":"frames"}],"output":{"name":"result"}}],[11,"get_avail_min","","",16,{"inputs":[{"name":"swparams"}],"output":{"name":"result"}}],[11,"set_start_threshold","","",16,{"inputs":[{"name":"swparams"},{"name":"frames"}],"output":{"name":"result"}}],[11,"get_start_threshold","","",16,{"inputs":[{"name":"swparams"}],"output":{"name":"result"}}],[11,"set_stop_threshold","","",16,{"inputs":[{"name":"swparams"},{"name":"frames"}],"output":{"name":"result"}}],[11,"get_stop_threshold","","",16,{"inputs":[{"name":"swparams"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"swparams"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"rawmidi","alsa","MIDI devices I/O and enumeration",null,null],[3,"Iter","alsa::rawmidi","Iterator over [Rawmidi](http://www.alsa-project.org/alsa-doc/alsa-lib/group___raw_midi.html) devices and subdevices",null,null],[3,"Info","","[snd_rawmidi_info_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___raw_midi.html) wrapper",null,null],[3,"Rawmidi","","[snd_rawmidi_t](http://www.alsa-project.org/alsa-doc/alsa-lib/group___raw_midi.html) wrapper",null,null],[3,"IO","","Implements `std::io::Read` and `std::io::Write` for `Rawmidi`",null,null],[11,"drop","","",17,{"inputs":[{"name":"info"}],"output":null}],[11,"get_device","","",17,{"inputs":[{"name":"info"}],"output":{"name":"i32"}}],[11,"get_subdevice","","",17,{"inputs":[{"name":"info"}],"output":{"name":"i32"}}],[11,"get_stream","","",17,{"inputs":[{"name":"info"}],"output":{"name":"direction"}}],[11,"get_subdevice_name","","",17,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"get_id","","",17,{"inputs":[{"name":"info"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[{"name":"iter"},{"name":"ctl"}],"output":{"name":"iter"}}],[6,"Item","","",null,null],[11,"next","","",18,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"drop","","",19,{"inputs":[{"name":"rawmidi"}],"output":null}],[11,"open","","",19,{"inputs":[{"name":"rawmidi"},{"name":"cstr"},{"name":"direction"},{"name":"bool"}],"output":{"name":"result"}}],[11,"info","","",19,{"inputs":[{"name":"rawmidi"}],"output":{"name":"result"}}],[11,"drop","","",19,{"inputs":[{"name":"rawmidi"}],"output":{"name":"result"}}],[11,"drain","","",19,{"inputs":[{"name":"rawmidi"}],"output":{"name":"result"}}],[11,"name","","",19,{"inputs":[{"name":"rawmidi"}],"output":{"name":"result"}}],[11,"io","","",19,{"inputs":[{"name":"rawmidi"}],"output":{"name":"io"}}],[11,"read","","",20,null],[11,"write","","",20,null],[11,"flush","","",20,{"inputs":[{"name":"io"}],"output":{"name":"result"}}],[0,"device_name","alsa","Enumerate devices in the alsa library configuration",null,null],[3,"HintIter","alsa::device_name","[snd_device_name_hint](http://www.alsa-project.org/alsa-doc/alsa-lib/group___control.html) wrapper",null,null],[3,"Hint","","[snd_device_name_get_hint](http://www.alsa-project.org/alsa-doc/alsa-lib/group___control.html) wrapper",null,null],[12,"name","","",21,null],[12,"desc","","",21,null],[12,"direction","","",21,null],[11,"drop","","",22,{"inputs":[{"name":"hintiter"}],"output":null}],[11,"new","","typical interfaces are: \"pcm\", \"ctl\", \"rawmidi\", \"timer\", \"seq\" and \"hwdep\".",22,{"inputs":[{"name":"hintiter"},{"name":"option"},{"name":"cstr"}],"output":{"name":"result"}}],[6,"Item","","",null,null],[11,"next","","",22,{"inputs":[{"name":"hintiter"}],"output":{"name":"option"}}],[11,"clone","","",21,{"inputs":[{"name":"hint"}],"output":{"name":"hint"}}],[11,"fmt","","",21,{"inputs":[{"name":"hint"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Result","alsa","",null,null],[11,"cmp","","",0,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"fmt","","",0,{"inputs":[{"name":"direction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"input","","",0,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"output","","",0,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}]],"paths":[[4,"Direction"],[3,"Error"],[3,"Iter"],[3,"Card"],[4,"ElemIface"],[3,"Ctl"],[3,"CardInfo"],[3,"HCtl"],[3,"ElemIter"],[3,"Elem"],[4,"State"],[4,"Format"],[4,"Access"],[3,"PCM"],[3,"IO"],[3,"HwParams"],[3,"SwParams"],[3,"Info"],[3,"Iter"],[3,"Rawmidi"],[3,"IO"],[3,"Hint"],[3,"HintIter"]]};
initSearch(searchIndex);
